{"version":3,"sources":["app.js","auth/signin.js","auth/userlinks.js","workspace/workspace.js","authinterceptor.js","currentuser.js","sessiontoken.js","users.service.js","workspaceservice.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACntEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function () {\r\n\r\n\r\n    var app = angular.module(\"listnotes\", [\r\n        \"ui.router\",\r\n        'listnotes.workspace',\r\n        'listnotes.auth.signin'\r\n    ]);\r\n\r\n\r\n    function config($urlRouterProvider) {\r\n        $urlRouterProvider.otherwise(\"/signin\");\r\n    }\r\n\r\n    config.$inject = [\"$urlRouterProvider\"];\r\n    app.config(config);\r\n    app.constant(\"API_BASE\", \"//localhost:3000/api/\");\r\n})();","(function(){\r\n\tangular\r\n\t\t.module('listnotes.auth.signin',['ui.router'])\r\n\t\t.config(signinConfig);\r\n\r\n\t\tfunction signinConfig($stateProvider) {\r\n\t\t\t$stateProvider\r\n\t\t\t\t.state('signin', {\r\n\t\t\t\t\turl: '/signin',\r\n\t\t\t\t\ttemplateUrl: '/components/auth/signin.html',\r\n\t\t\t\t\tcontroller: SignInController,\r\n\t\t\t\t\tcontrollerAs: 'ctrl',\r\n\t\t\t\t\tbindToController: this\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tsigninConfig.$inject = ['$stateProvider'];\r\n\r\n\t\tfunction SignInController($state, UsersService) {\r\n\t\t\tvar vm = this;\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.login = function() {\r\n                console.log(vm.user);\r\n\t\t\t\tif($('#login').attr('value') == 'Sign Up'){\r\n\t\t\t\t\tUsersService.create(vm.user).then(function(response){\r\n\t\t\t\t\t$state.go('workspace');\r\n\t\t\t\t\t $('#id01').removeAttr('style');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\tUsersService.login(vm.user).then(function(response){\r\n\t\t\t\t\t$state.go('workspace');\r\n\t\t\t\t\t $('#id01').removeAttr('style');\r\n\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n            vm.closeSignIn = function (){\r\n                $('#id01').removeAttr('style');\r\n            };\r\n\t\t\tvm.switchToSignup = function (){\r\n\t\t\t\t\r\n\t\t\t\t$('#email').slideDown();\r\n\t\t\t\t$(\"#emailButton\").prop('required',true);\r\n\t\t\t\t$('#Signin').text('Sign Up');\r\n\t\t\t\t$('#login').attr('value', 'Sign Up');\r\n\t\t\t\t$('#new_user').attr('ng-submit',\"ctrl.submit()\");\r\n\t\t\t\t$('#signupText').hide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tSignInController.$inject = ['$state', \"UsersService\"];\r\n})();","(function () {\r\n\tangular.module('listnotes')\r\n\t\t.directive('userlinks',\r\n\t\tfunction () {\r\n\t\t\tUserLinksController.$inject = ['$state', 'currentUser', 'sessionToken'];\r\n\t\t\tfunction UserLinksController($state, currentUser, sessionToken) {\r\n\t\t\t\tvar vm = this;\r\n\t\t\t\tvm.token = function () {\r\n\t\t\t\t\treturn sessionToken.get();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvm.signedIn = function () {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn !!(vm.token());\r\n\t\t\t\t};\r\n\t\t\t\tvm.signedOut = function () {\r\n\t\t\t\t\treturn !(vm.token());\r\n\t\t\t\t};\r\n\t\t\t\tvm.login = function () {\r\n\t\t\t\t\t$('#id01').attr('style', 'display:table');\r\n\t\t\t\t\t$('#emailButton').removeAttr('required');\r\n\t\t\t\t\t$('#email').hide();\r\n\t\t\t\t\t$('#Signin').text('Sign In');\r\n\t\t\t\t\t$('#login').attr('value', 'Login');\r\n\t\t\t\t\t$('#new_user').attr('ng-submit', \"ctrl.login()\");\r\n\t\t\t\t\t$('#signupText').show();\r\n\t\t\t\t\t\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvm.logout = function () {\r\n\t\t\t\t\tcurrentUser.clear();\r\n\t\t\t\t\tsessionToken.clear();\r\n\t\t\t\t\t$state.go('signin');\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tscope: {},\r\n\t\t\t\tcontroller: UserLinksController,\r\n\t\t\t\tcontrollerAs: 'ctrl',\r\n\t\t\t\tbindToController: true,\r\n\t\t\t\ttemplateUrl: '/components/auth/userlinks.html'\r\n\t\t\t};\r\n\t\t});\r\n})();","(function () {\r\n    angular\r\n        .module('listnotes.workspace', ['ui.router'])\r\n        .config(workspaceConfig);\r\n\r\n    function workspaceConfig($stateProvider) {\r\n        $stateProvider\r\n            .state('workspace', {\r\n                url: '/workspace',\r\n                templateUrl: '/components/workspace/workspace.html',\r\n                controller: workspaceController,\r\n                controllerAs: 'ctrl',\r\n                bindToController: this\r\n            });\r\n    }\r\n\r\n    workspaceConfig.$inject = ['$stateProvider'];\r\n\r\n    function workspaceController($state, workspaceService) {\r\n        var x = this;\r\n        x.note = {};\r\n        var workspaces = [];\r\n        var trix = document.querySelector(\"trix-editor\")\r\n        x.saveNotes = function () {\r\n            x.note.content = JSON.stringify(trix.editor)\r\n            console.log(x.note.content);\r\n            console.log(x.note.title);\r\n           \r\n            if(x.workspaces.indexOf(x.note.title) != -1){\r\n                workspaceService.update(x.note)\r\n            }else{\r\n            workspaceService.create(x.note).then(function () {\r\n                console.log('workspaceService.create() successful');\r\n                x.workspaces.push(x.note.title);\r\n                console.log(x.workspaces);\r\n            })\r\n            .catch(function(err){\r\n                console.log(err);\r\n            })\r\n            }\r\n        }\r\n\r\n        x.deleteOne = function(title){\r\n            workspaceService.deleteOne(title).then(function(){\r\n                x.workspaces.splice(x.workspaces.indexOf(title),1);\r\n            })\r\n        }\r\n   \r\n         x.getOne = function (title) {\r\n             console.log(title);\r\n           workspaceService.fetch(title).then(function () {\r\n               console.log(workspaceService.currentNote)\r\n                trix.editor.loadJSON(JSON.parse(workspaceService.currentNote));\r\n           })\r\n           $('#titles').attr('value', title);\r\n        }\r\n        x.getAll = function () {\r\n            workspaceService.fetchAll().then(function () {\r\n               var temp = workspaceService.getWorkspaces().notes;\r\n               x.workspaces = [];\r\n                console.log(x.workspaces);\r\n                for (let y = 0; y < temp.length; y++){\r\n                     x.workspaces.push(temp[y].title)\r\n                }\r\n            })\r\n\r\n        }\r\n        x.getAll();\r\n    }\r\n    workspaceController.$inject = ['$state', \"workspaceService\"];\r\n})();","(function(){\r\n\tangular.module('listnotes')\r\n\t\t.factory('AuthInterceptor', ['sessionToken', 'API_BASE', \r\n\t\t\tfunction(sessionToken, API_BASE) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\trequest: function(config) {\r\n\t\t\t\t\t\tvar token = sessionToken.get();\r\n\t\t\t\t\t\tif (token && config.url.indexOf(API_BASE) > -1) {\r\n\t\t\t\t\t\t\tconfig.headers['Authorization'] = token;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn config;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}]);\r\n\r\n\tangular.module('listnotes')\r\n\t\t.config(['$httpProvider', function($httpProvider) {\r\n\t\t\treturn $httpProvider.interceptors.push('AuthInterceptor');\r\n\t\t}]);\r\n})();","(function() {\r\n\tangular.module('listnotes')\r\n\t\t.service('currentUser', [ '$window', function($window) {\r\n\t\t\tfunction currentUser() {\r\n\t\t\t\tvar currUser = $window.localStorage.getItem('currentUser');\r\n\t\t\t\tif (currUser && currUser !== \"undefined\") {\r\n\t\t\t\t\tthis.currentUser = JSON.parse($window.localStorage.getItem('currentUser'));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurrentUser.prototype.set = function(user) {\r\n\t\t\t\tthis.currentUser = user;\r\n\t\t\t\t$window.localStorage.setItem('currentUser', JSON.stringify(user));\r\n\t\t\t};\r\n\t\t\tcurrentUser.prototype.get = function() {\r\n\t\t\t\treturn this.currentUser || {};\r\n\t\t\t};\r\n\t\t\tcurrentUser.prototype.clear = function() {\r\n\t\t\t\tthis.currentUser = undefined;\r\n\t\t\t\t$window.localStorage.removeItem('currentUser');\r\n\t\t\t};\r\n\t\t\tcurrentUser.prototype.isSignedIn = function() {\r\n\t\t\t\treturn !!this.get().id;\r\n\t\t\t};\r\n\t\t\treturn new currentUser();\r\n\t\t}]);\r\n})();","(function(){\r\n\tangular.module('listnotes')\r\n\t\t.service('sessionToken', ['$window', function($window) {\r\n\t\t\tfunction sessionToken(){\r\n\t\t\t\tthis.sessionToken = $window.localStorage.getItem('SessionToken');\r\n\t\t\t}\r\n\r\n\t\t\tsessionToken.prototype.set = function(token) {\r\n\t\t\t\tthis.sessionToken = token;\r\n\t\t\t\t$window.localStorage.setItem('SessionToken', token);\r\n\t\t\t};\r\n\r\n\t\t\tsessionToken.prototype.get = function(){\r\n\t\t\t\treturn this.sessionToken;\r\n\t\t\t};\r\n\r\n\t\t\tsessionToken.prototype.clear = function() {\r\n\t\t\t\tthis.sessionToken = undefined;\r\n\t\t\t\t$window.localStorage.removeItem('SessionToken');\r\n\t\t\t};\r\n\t\t\treturn new sessionToken();\r\n\t\t}]);\r\n})();","(function(){\r\n\tangular.module('listnotes')\r\n\t\t.service('UsersService', [\r\n\t\t\t'$http', 'API_BASE', 'sessionToken', 'currentUser',\r\n\t\t\tfunction($http, API_BASE, sessionToken, currentUser) {\r\n\t\t\t\tfunction UsersService(){\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tUsersService.prototype.create = function(user) {\r\n\t\t\t\t\tconsole.log(\"This is the user: \");\r\n\t\t\t\t\t\tconsole.log(user);\r\n\t\t\t\t\tvar userPromise = $http.post(API_BASE + 'user', {user: user});\r\n\r\n\t\t\t\t\tuserPromise.then(function(response){\r\n\t\t\t\t\t\tsessionToken.set(response.data.token);\r\n\t\t\t\t\t\tcurrentUser.set(response.data.user);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn userPromise;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tUsersService.prototype.login = function(user) {\r\n\t\t\t\t\tvar loginPromise = $http.post(API_BASE + 'login',{\r\n\t\t\t\t\t\tuser: user\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tloginPromise.then(function(response){\t\t\r\n\t\t\t\t\t\tsessionToken.set(response.data.token);\r\n\t\t\t\t\t\tcurrentUser.set(response.data.user);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn loginPromise;\r\n\t\t\t\t};\r\n\t\t\t\treturn new UsersService();\r\n\t\t\t}]);\r\n})();","(function () {\r\n    angular.module('listnotes')\r\n        .service('workspaceService', workspaceService);\r\n\r\n    workspaceService.$inject=  ['$http', 'API_BASE','currentUser']\r\n\r\n    function workspaceService($http, API_BASE,currentUser) {\r\n        var workspaceService = this;\r\n        workspaceService.workspaces = [];\r\n         workspaceService.currentNote;\r\n\r\n\r\n        workspaceService.create = function (note) {\r\n            console.log(\"This is the notes: \");\r\n            console.log(note);\r\n            var notesPromise = $http.post(API_BASE + 'notes', { note: note, user: currentUser.get()})\r\n            .then(function (response) {\r\n                console.log('POST request successful');        \r\n            });\r\n            return notesPromise;\r\n        };\r\n\r\n        workspaceService.fetch = function(title) {\r\n            \r\n               return $http.get(API_BASE + 'notesOne', {params: {user: currentUser.get(), title: title}})\r\n                .then(function (response) {\r\n                    console.log(response.data);\r\n                     workspaceService.currentNote = response.data.note.content;\r\n                })\r\n                .catch(function(response){\r\n                    console.log('something went wrong with getOne')\r\n                    console.log(response);\r\n                })\r\n               \r\n            \r\n        };\r\n\r\n        workspaceService.fetchAll = function () {\r\n            console.log(currentUser.get());\r\n             var fetchAllPromise = $http.get(API_BASE + 'notes', {params: {user: currentUser.get()}})\r\n                .then(function (response) {\r\n                    workspaceService.workspaces = response.data;\r\n                    console.log(workspaceService.workspaces);\r\n                })\r\n                .catch(function(response){\r\n                    console.log('something went wrong')\r\n                    console.log(response);\r\n                })\r\n                return fetchAllPromise\r\n        };\r\n\r\n        workspaceService.update = function(note){\r\n            return $http.post(API_BASE + 'notesUpdate', { note: note, user: currentUser.get()})\r\n            .then(function (response) {\r\n                console.log('POST request successful');        \r\n            });\r\n        }\r\n\r\n        workspaceService.deleteOne = function(title){\r\n             return $http.delete(API_BASE + 'notes',  {params: {user: currentUser.get(),title: title}})\r\n            .then(function (response) {\r\n                console.log(response);        \r\n            });\r\n        }\r\n\r\n        workspaceService.getWorkspaces = function () {\r\n            return workspaceService.workspaces;\r\n        };\r\n\r\n\r\n    };\r\n})();"]}